- creazione di un componente padre che effettua una chiamata verso un service injettato (delegato alla chiamata per far tornare la lista dei film)
- solo il componente padre avrà le logiche, il figlio delegato solo alla vista, più banale possibile. è lui che intercetterà il click ma comunque lo invierà al padre

- componente figlio (esattamente uguale a quello di profile) che riceve in input la lista dei film e rappresenta la lista (avrà solo input per ricevere i film e output per mandare il click)

- dalla lista si avrà i click sugli elementi.
    - il click -> passerà il film al padre che provvederà a chiamare la rotta -> tramite una rotta dinamica /detail/:id
    - implementare lo slider --> abbiamo due icone, edit e delete --> passeranno al padre il film selezionato (console.log)

- componente del dettaglio che recupera l'id dal parametro e chiama il service per ricavare il film dall'array
    - visualizza le info del film

- bonus: torna indietro dalla tab del dettaglio con la freccia sulla nav

- lista farla shared, fuori dal contesto della tab


- creare una form ed evento submit agganciato

-fai delete e aggiunta




-header come componente
-crea list item condivisa
-id istanziato fuori FATTO (errore)
-titolo passato come input dal padre nell'header
-fai anche per movies FATTO
-interfaccia Movies con lettera maiuscola
-rendere privato ciò che è da rendere privato con l'underscore FATTO
-risolvi warning ionlabel
-cambiare l'any del result del getlistsubject nel movieservice

-VEDERE CAST NEL DETTAGLIO DEL MOVIE COL CLICK CHE TI RIMANDA AL DETTAGLIO DELLA' CELEBRITA'
-per fare ciò crearsi una card comune come componente con id e name, simile alla lista


        // return this._movies.find((movies: movies) => movies.id === id);

        // se voglio usare questo metodo posso togliere l'undefined

        // const movie: movies | undefined = this.movies.find(movies => movies.id === id);
        // if (movie) {
        //     return movie;
        // } else {
        //     return {
        //         id: "0",
        //         title: "",
        //         year: 0,
        //         runningTime: 0,
        //         genres: "",
        //         rating: {
        //             averageRating: 0,
        //             numVotes: 0,
        //         }
        //     }
        // }